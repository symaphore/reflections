When would you want to use a remote repository rather than keeping all your work
local?

    Fill in your answer here
    Multiple reasons.  If I wanted to make sure everything is backed up in the cloud.  If I wanted to work from multiple computers
    say from the office and at home.  If there were multiple people working on the project.  If it seemed like a good idea and 
    I wanted to make the project public.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Fill in your answer here
    Because you may not want the changes that someone else has added to the repository.  Allowing for a manual pull provides flexibility.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fill in your answer here
    A fork is when a copy of a repository is made in GitHub essentially a GitHub clone.
    A clone is when a copy of a repository is made to the local machine either from a remote repository or even from another local repository (?).
    A branch is when a new stem is created off of the main line in order to work on something new that is not yet ready to be part of the main line. Branches occor within a single repository.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here
    Having a local copy of the remote allows for easy comapres and diffs between what changes you are putting in and what the code looks like in the remote repository.  Also allows you to work offline if you are not connected.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here
    I would use SVN and create a project Wiki so that all members of the team could post updates that everyone would check ... or there would have to be an email distribution list where everytime someone made a change they would have to send an email to the distribution.  Git with Github is much easier.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
    I can think of a couple of reasons.  If you are trying something new that has not yet been decided on then a branch is a good place to do that and not merge back to the main line.  Another situation has to do with parallel development and overlapping timelines for project deliverables.
